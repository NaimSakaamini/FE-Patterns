import React from 'react';
import ReactDOM from 'react-dom/client';
import { Provider } from 'react-redux';
import CategoryManager from './components/CategoryManager';
import './index.css';

// In a real standalone scenario, we would use our own store
// But for Module Federation, the store will be provided by the host app
const mockStore = {
  getState: () => ({
    categories: {
      items: [],
      loading: false,
      error: null
    },
    todos: {  // Add the todos slice that CategoryManager is trying to access
      items: [],
      loading: false,
      error: null
    }
  }),
  dispatch: () => {},
  subscribe: () => {}
};

// This is only used when running the app standalone
// When used as a remote in Module Federation, this code won't be executed
ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <Provider store={mockStore}>
      <CategoryManager />
    </Provider>
  </React.StrictMode>
); 